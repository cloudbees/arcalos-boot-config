buildPack: none
pipelineConfig:
  pipelines:
    pullRequest:
      pipeline:
        agent:
          image: gcr.io/jenkinsxio/builder-go
        stages:
        - name: pr
          steps:
          - args:
            - build
            command: make
            dir: /workspace/source/env
            name: helm-build
    release:
      pipeline:
        agent:
          image: gcr.io/jenkinsxio/builder-go
        environment:
        - name: DEPLOY_NAMESPACE
          value: jx
        stages:
        - name: release
          steps:
          - args:
            - apply
            - -f
            - install-cdr.yaml
            command: kubectl
            dir: /workspace/source/env/install/start
            name: create-install-crd
          - args:
            - apply
            - -f
            - install-started.yaml
            command: kubectl
            dir: /workspace/source/env/install/start
            name: start
          - args:
            - step
            - git
            - validate
            command: jx
            dir: /workspace/source/env
            name: validate-git
          - args:
            - step
            - override-requirements
            - -b
            command: jx
            dir: /workspace/source/env
            name: override-requirements
          - args:
            - step
            - verify
            - preinstall
            - --lazy-create=true
            - --workload-identity=true
            command: jx
            dir: /workspace/source/env
            name: verify-preinstall
          - args:
            - upgrade
            - crd
            command: jx
            name: install-jx-crds
          - args:
            - step
            - boot
            - vault
            command: jx
            dir: /workspace/source/systems/vault
            name: install-vault
          - args:
            - get
            - token
            command: jxt
            dir: /workspace/source/env
            image: gcr.io/jenkinsxio/jx-tenant-service:0.0.746
            name: get-tenant-token
          - args:
            - get
            - subdomain
            command: jxt
            dir: /workspace/source/env
            image: gcr.io/jenkinsxio/jx-tenant-service:0.0.746
            name: get-subdomain
          - args:
            - step
            - helm
            - apply
            - --boot
            - --remote
            - --no-vault
            - --name
            - jxing
            command: jx
            dir: /workspace/source/systems/jxing
            env:
            - name: DEPLOY_NAMESPACE
              value: kube-system
            name: install-nginx
          - args:
            - step
            - create
            - install
            - values
            - -b
            - --lazy-create=true
            command: jx
            dir: /workspace/source/env
            name: create-install-values
          - args:
            - step
            - helm
            - apply
            - --boot
            - --remote
            - --no-vault
            - --name
            - jx
            command: jx
            dir: /workspace/source/systems/external-dns
            name: install-external-dns
          - args:
            - apply
            - --wait
            - --validate=true
            - -f
            - https://raw.githubusercontent.com/jetstack/cert-manager/release-0.8/deploy/manifests/00-crds.yaml
            command: kubectl
            dir: /workspace/source
            env:
            - name: DEPLOY_NAMESPACE
              value: cert-manager
            name: install-cert-manager-crds
          - args:
            - step
            - helm
            - apply
            - --boot
            - --remote
            - --no-vault
            - --name
            - jx
            command: jx
            dir: /workspace/source/systems/cm
            env:
            - name: DEPLOY_NAMESPACE
              value: cert-manager
            name: install-cert-manager
          - args:
            - step
            - helm
            - apply
            - --boot
            - --remote
            - --no-vault
            - --name
            - jx
            command: jx
            dir: /workspace/source/systems/acme
            name: install-acme-issuer-and-certificate
          - args:
            - step
            - create
            - values
            - --name
            - parameters
            command: jx
            dir: /workspace/source/env
            name: helm-populate-params
          - args:
            - step
            - create
            - templated
            - --parameters-file=../../env/parameters.yaml
            - --requirements-dir=../../
            - --template-file=jx-auth-configmap.tmpl.yaml
            - --config-file=templates/jx-auth-configmap.yaml
            command: jx
            dir: /workspace/source/systems/jx-auth
            name: create-jx-auth-config
          - args:
            - step
            - helm
            - apply
            - --boot
            - --remote
            - --no-vault
            - --name
            - jx-auth
            command: jx
            dir: /workspace/source/systems/jx-auth
            name: install-jx-auth-config
          - args:
            - step
            - helm
            - apply
            - --boot
            - --remote
            - --name
            - jenkins-x
            - --provider-values-dir
            - ../kubeProviders
            command: jx
            dir: /workspace/source/env
            name: install-env
          - args:
            - update
            - workspace
            command: jxt
            dir: /workspace/source/env
            image: gcr.io/jenkinsxio/jx-tenant-service:0.0.746
            name: update-workspace
          - command: ./adduser.sh
            dir: /workspace/source
            name: add-user
          - args:
            - ""
            - ""
            - "now populating projects...."
            - ""
            - ""
            command: echo
            dir: /workspace/source/repositories
            name: log-repos
          - args:
            - step
            - helm
            - apply
            - --boot
            - --name
            - repos
            command: jx
            dir: /workspace/source/repositories
            name: apply-repositories
          - args:
            - step
            - scheduler
            - config
            - apply
            - --direct=true
            command: jx
            dir: /workspace/source/prowConfig
            name: apply-pipeline-schedulers
          - args:
            - step
            - helm
            - apply
            - --boot
            - --remote
            - --no-vault
            - --name
            - velero
            command: jx
            dir: /workspace/source/systems/velero
            env:
            - name: DEPLOY_NAMESPACE
              value: velero
            name: install-velero
          - args:
            - step
            - helm
            - apply
            - --boot
            - --remote
            - --no-vault
            - --name
            - velero-backups
            command: jx
            dir: /workspace/source/systems/velero-backups
            env:
            - name: DEPLOY_NAMESPACE
              value: velero
            name: install-velero-backups
          - args:
            - register
            - repositories
            command: jxt
            dir: /workspace/source/env
            image: gcr.io/jenkinsxio/jx-tenant-service:0.0.746
            name: register-repositories
          - args:
            - get
            - github
            - token
            command: jxt
            dir: /workspace/source/env
            image: gcr.io/jenkinsxio/jx-tenant-service:0.0.746
            name: refresh-git-tokens
          - args:
            - step
            - verify
            - dns
            - --timeout
            - 10m
            command: jx
            dir: /workspace/source
            name: verify-dns
          - args:
            - step
            - verify
            - env
            command: jx
            dir: /workspace/source
            name: verify-env
          - args:
            - step
            - verify
            - install
            - --pod-wait-time
            - 30m
            command: jx
            dir: /workspace/source/env
            name: verify-install
          - args:
            - step
            - replicate
            - secret
            - tls-cbjx-*
            - -r
            - jx-staging
            - -r
            - jx-production
            - --create-namespace
            command: jx
            dir: /workspace/source/env
            name: replicate-secrets
          - args:
            - diagnose
            - --show
            - health
            command: jx
            dir: /workspace/source/env
            name: verify-health
          - args:
            - apply
            - -f
            - .
            command: kubectl
            dir: /workspace/source/env/install/finished
            name: end
