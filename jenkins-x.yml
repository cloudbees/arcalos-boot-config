buildPack: none
pipelineConfig:
  pipelines:
    pullRequest:
      pipeline:
        agent:
          image: gcr.io/jenkinsxio/builder-go
        stages:
        - name: pr
          steps:
          - args:
            - build
            command: make
            dir: /workspace/source/env
            name: helm-build
    release:
      pipeline:
        agent:
          image: gcr.io/jenkinsxio/builder-go
        environment:
        - name: DEPLOY_NAMESPACE
          value: jx
        stages:
        - name: release
          steps:
          - name: pre-debug-requirements
            dir: /workspace/source
            command: cat
            args:
            - jx-requirements.yml
          - name: create-install-crd
            dir: /workspace/source/env/install/start
            command: kubectl
            args:
            - apply
            - -f
            - install-cdr.yaml
          - name: start
            dir: /workspace/source/env/install/start
            command: kubectl
            args: 
            - apply
            - -f
            - install-started.yaml
          - name: validate-git
            dir: /workspace/source/env
            command: jx
            args:
            - step
            - git
            - validate
          - name: override-requirements
            dir: /workspace/source/env
            command: jx
            args: 
            - step
            - override-requirements
            - -b
            - --verbose
          - name: debug-requirements
            dir: /workspace/source
            command: cat
            args: ['jx-requirements.yml']
          - name: verify-preinstall
            dir: /workspace/source/env
            command: jx
            args: ['step','verify','preinstall','--verbose', '--lazy-create=true', '--workload-identity=true']
          - name: get-subdomain
            dir: /workspace/source/env
            command: jx
            args: ['step','get','subdomain', '-b', '--verbose']
          - name: get-tenant-token
            dir: /workspace/source/env
            image: gcr.io/jenkinsxio/jx-tenant-service:0.0.163
            command: jxt
            args: ['get','token']
          - name: install-jx-crds
            command: jx
            args: ['upgrade','crd']
          - name: install-nginx
            dir: /workspace/source/systems/jxing
            command: jx
            args: ['step','helm','apply', '--boot', '--remote', '--no-vault', '--name', 'jxing']
            env:
            - name: DEPLOY_NAMESPACE
              value: kube-system
          - name: create-install-values
            dir: /workspace/source/env
            command: jx
            args: ['step','create','install', 'values', '-b', '--lazy-create=true', '--verbose']
          - name: install-external-dns
            dir: /workspace/source/systems/external-dns
            command: jx
            args: ['step','helm','apply', '--boot', '--remote', '--no-vault', '--name', 'jx']
          - name: install-cert-manager-crds
            dir: /workspace/source
            command: kubectl
            args: ['apply', '--wait', '--validate=true', '-f', 'https://raw.githubusercontent.com/jetstack/cert-manager/release-0.8/deploy/manifests/00-crds.yaml']
            env:
            - name: DEPLOY_NAMESPACE
              value: cert-manager
          - name: install-cert-manager
            dir: /workspace/source/systems/cm
            command: jx
            args: ['step','helm','apply', '--boot', '--remote', '--no-vault', '--name', 'jx']
            env:
            - name: DEPLOY_NAMESPACE
              value: cert-manager
          - name: install-acme-issuer-and-certificate
            dir: /workspace/source/systems/acme
            command: jx
            args: ['step','helm','apply', '--boot', '--remote', '--no-vault', '--name', 'jx']
          - name: install-vault
            dir: /workspace/source/systems/vault
            command: jx
            args: ['step', 'boot','vault','--verbose']
          - name: helm-populate-params
            dir: /workspace/source/env
            command: jx
            args: ['step', 'create', 'values', '--name', 'parameters']
          - name: git-diff0
            dir: /workspace/source
            command: git
            args: ['diff']
          - name: git-status0
            dir: /workspace/source
            command: git
            args: ['status']
          - name: install-env
            dir: /workspace/source/env
            command: jx
            args: ['step','helm','apply', '--boot', '--remote', '--name', 'jenkins-x', '--provider-values-dir', '../kubeProviders']
          - name: git-diff1
            dir: /workspace/source
            command: git
            args: ['diff']
          - name: git-status1
            dir: /workspace/source
            command: git
            args: ['status']
          - name: add-user
            dir: /workspace/source
            command: './adduser.sh'
          - name: verify-env
            dir: /workspace/source
            command: jx
            args: ['step','verify','env']
          - name: log-repos
            dir: /workspace/source/repositories
            command: echo
            args:
            - ""
            - ""
            - "now populating projects...."
            - ""
            - ""
          - name: apply-repositories
            dir: /workspace/source/repositories
            command: jx
            args: ['step','helm','apply', '--boot', '--name', 'repos']
          - name: apply-pipeline-schedulers
            dir: /workspace/source/prowConfig
            command: jx
            args: ['step','scheduler','config', 'apply', '--direct=true']
          - name: register-repositories
            dir: /workspace/source/env
            image: gcr.io/jenkinsxio/jx-tenant-service:0.0.163
            command: jxt
            args: ['register','repositories']
          - name: refresh-git-tokens
            dir: /workspace/source/env
            image: gcr.io/jenkinsxio/jx-tenant-service:0.0.163
            command: jxt
            args: ['get','github', 'token']
          - name: update-webhooks
            dir: /workspace/source/repositories
            command: jx
            args: ['update','webhooks','--verbose', '--warn-on-fail']
          - name: verify-install
            dir: /workspace/source/env
            command: jx
            args: ['step','verify','install', '--pod-wait-time', '30m']
          - name: replicate-secrets
            dir: /workspace/source/env
            command: jx
            args: ['step','replicate', 'secret', 'tls-aps-*', '-r', 'jx-staging', '-r', 'jx-production', '--create-namespace']
          - name: verify-health
            dir: /workspace/source/env
            command: jx
            args: ['diagnose', '--show', 'health']
          - name: end
            dir: /workspace/source/env/install/finished
            command: kubectl
            args: ['apply','-f','.']
